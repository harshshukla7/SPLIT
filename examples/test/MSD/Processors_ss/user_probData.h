/***********************************************
 * Header file automatically generated by SPLIT
 *
 * More information : la.epfl.ch
 ***********************************************/
#ifndef __user_probData_h__
#define __user_probData_h__

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "foo_data.h"
#include "user_matrix_ops.h"
#include "user_ldl.h"
#define real data_t_primal_out
#define REAL data_t_primal_out
#define nParam 10
#define nPrimal 115
#define nDual 70
#define nEqCon 80
#define rho_init 0.050000
#define rho_inv_init 20.000000
#define prox_var_init 0.000000
extern real rho;

extern real rhoinv; 

extern real prox_var; 

#define nn_lp 195
#define LNZ_ss 1130
#define ANZ_ss 1245
#define N_ss 195
#define suitesparse_linsolve


#define par_ex_rows 10
#define par_ex_cols 1
#define par_ex_len 10
extern real par_ex[10];

#define sol_x_rows 115
#define sol_x_cols 1
#define sol_x_len 115
extern real sol_x[115];

#define sol_lam_rows 70
#define sol_lam_cols 1
#define sol_lam_len 70
extern real sol_lam[70];

#define sol_y_rows 70
#define sol_y_cols 1
#define sol_y_len 70
extern real sol_y[70];

#define l_rows 70
#define l_cols 1
#define l_len 70
extern real l[70];

#define f_rows 115
#define f_cols 1
#define f_len 115
extern real f[115];

#define b_rows 80
#define b_cols 1
#define b_len 80
extern real b[80];

#define _var_1__b_rows 80
#define _var_1__b_cols 1
#define _var_1__b_len 80
extern real _var_1__b[80];

#define Ltrans_p_ss_rows 71
#define Ltrans_p_ss_cols 1
#define Ltrans_p_ss_len 71
extern int Ltrans_p_ss[71];

#define Ltrans_i_ss_rows 70
#define Ltrans_i_ss_cols 1
#define Ltrans_i_ss_len 70
extern int Ltrans_i_ss[70];

#define Ltrans_x_ss_rows 70
#define Ltrans_x_ss_cols 1
#define Ltrans_x_ss_len 70
extern real Ltrans_x_ss[70];

#define n_Ltrans_ss_rows 1
#define n_Ltrans_ss_cols 1
#define n_Ltrans_ss_len 1
extern int n_Ltrans_ss[1];

#define Ap_ss_rows 196
#define Ap_ss_cols 1
#define Ap_ss_len 196
extern int Ap_ss[196];

#define Ai_ss_rows 1245
#define Ai_ss_cols 1
#define Ai_ss_len 1245
extern int Ai_ss[1245];

#define Ax_ss_rows 1245
#define Ax_ss_cols 1
#define Ax_ss_len 1245
extern real Ax_ss[1245];

#define D_ss_rows 195
#define D_ss_cols 1
#define D_ss_len 195
extern real D_ss[195];

#define Lp_ss_rows 196
#define Lp_ss_cols 1
#define Lp_ss_len 196
extern int Lp_ss[196];

#define d_ss_rows 1
#define d_ss_cols 1
#define d_ss_len 1
extern int d_ss[1];

#define L_p_ss_rows 116
#define L_p_ss_cols 1
#define L_p_ss_len 116
extern int L_p_ss[116];

#define L_i_ss_rows 70
#define L_i_ss_cols 1
#define L_i_ss_len 70
extern int L_i_ss[70];

#define L_x_ss_rows 70
#define L_x_ss_cols 1
#define L_x_ss_len 70
extern real L_x_ss[70];

#define n_L_ss_rows 1
#define n_L_ss_cols 1
#define n_L_ss_len 1
extern int n_L_ss[1];
#ifdef lapack_linsolve 
extern __CLPK_integer ipiv[nn_lp];
#endif 
 real *Lx_ss;
 int *Li_ss;


// Functions
void custom_compute_parametric(REAL l[70], REAL f[115], REAL b[80], REAL par[10]);
void compute_parametric_pB(REAL y[80], REAL x[10]);
void custom_mult_Ltrans(REAL y[115], REAL x[70]);
/*
ldl_ss
*/
void custom_solve_kkt(REAL y[195], REAL x[195]);
void custom_compute_prefactor();
void custom_mult_L(REAL workDual[70], REAL x[115]);
void custom_prox(real y[nDual], real x[nDual]);


#endif
