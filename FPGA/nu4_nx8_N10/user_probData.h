/***********************************************
 * Header file automatically generated by SPLIT
 *
 * More information : la.epfl.ch
 ***********************************************/
#ifndef __user_probData_h__
#define __user_probData_h__

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "user_matrix_ops.h"
typedef double REAL;
#define printVec printDoubleVec
#define nParam 8
#define nPrimal 128
#define nDual 80
#define nEqCon 88
extern const REAL rho;

extern const REAL rhoinv; 

extern REAL prox_var; 

#define nn_lp 216
#define LNZ_ss 958
#define ANZ_ss 1086
#define N_ss 216

#define par_ex_rows 8
#define par_ex_cols 1
#define par_ex_len 8
extern double par_ex[8];

#define sol_x_rows 128
#define sol_x_cols 1
#define sol_x_len 128
extern double sol_x[128];

#define sol_lam_rows 80
#define sol_lam_cols 1
#define sol_lam_len 80
extern double sol_lam[80];

#define sol_y_rows 80
#define sol_y_cols 1
#define sol_y_len 80
extern double sol_y[80];

#define l_rows 80
#define l_cols 1
#define l_len 80
extern double l[80];

#define f_rows 128
#define f_cols 1
#define f_len 128
extern double f[128];

#define b_rows 88
#define b_cols 1
#define b_len 88
extern double b[88];

#define _var_1__b_rows 88
#define _var_1__b_cols 1
#define _var_1__b_len 88
extern double _var_1__b[88];

#define Ltrans_rind_rows 80
#define Ltrans_rind_cols 1
#define Ltrans_rind_len 80
extern int Ltrans_rind[80];

#define Ltrans_cind_rows 80
#define Ltrans_cind_cols 1
#define Ltrans_cind_len 80
extern int Ltrans_cind[80];

#define Ltrans_val_rows 80
#define Ltrans_val_cols 1
#define Ltrans_val_len 80
extern double Ltrans_val[80];

#define KKT_rows 216
#define KKT_cols 128
#define KKT_len 27648
extern double KKT[27648];

#define L_rind_rows 80
#define L_rind_cols 1
#define L_rind_len 80
extern int L_rind[80];

#define L_cind_rows 80
#define L_cind_cols 1
#define L_cind_len 80
extern int L_cind[80];

#define L_val_rows 80
#define L_val_cols 1
#define L_val_len 80
extern double L_val[80];
#ifdef lapack_linsolve 
extern __CLPK_integer ipiv[nn_lp];
#endif 
extern double *Lx_ss;
extern int *Li_ss;


// Functions
void custom_compute_parametric(REAL l[80], REAL f[128], REAL b[88], REAL par[8]);
void compute_parametric_pB(REAL y[88], REAL x[8]);
void custom_mult_Ltrans(REAL y[128], REAL x[80]);
/*
invert_FPGA
*/
void custom_solve_kkt(REAL y[216], REAL x[216]);
void custom_compute_prefactor();
void custom_mult_L(REAL workDual[80], REAL x[128]);
void custom_prox(double y[nDual], double x[nDual]);


#endif
