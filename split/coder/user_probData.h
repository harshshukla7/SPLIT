/***********************************************
 * Header file automatically generated by SPLIT
 *
 * More information : la.epfl.ch
 ***********************************************/
#ifndef __user_probData_h__
#define __user_probData_h__

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "user_matrix_ops.h"
typedef double REAL;
#define printVec printDoubleVec
#define nParam 4
#define nPrimal 34
#define nDual 20
#define nEqCon 24
extern const REAL rho;

extern const REAL rhoinv; 

extern REAL prox_var; 

#define nn_lp 58
#define LNZ_ss 134
#define ANZ_ss 168
#define N_ss 58

#define par_ex_rows 4
#define par_ex_cols 1
#define par_ex_len 4
extern double par_ex[4];

#define sol_x_rows 34
#define sol_x_cols 1
#define sol_x_len 34
extern double sol_x[34];

#define sol_lam_rows 20
#define sol_lam_cols 1
#define sol_lam_len 20
extern double sol_lam[20];

#define sol_y_rows 20
#define sol_y_cols 1
#define sol_y_len 20
extern double sol_y[20];

#define l_rows 20
#define l_cols 1
#define l_len 20
extern double l[20];

#define f_rows 34
#define f_cols 1
#define f_len 34
extern double f[34];

#define b_rows 24
#define b_cols 1
#define b_len 24
extern double b[24];

#define _var_1__b_rows 24
#define _var_1__b_cols 1
#define _var_1__b_len 24
extern double _var_1__b[24];

#define Ltrans_rind_rows 20
#define Ltrans_rind_cols 1
#define Ltrans_rind_len 20
extern int Ltrans_rind[20];

#define Ltrans_cind_rows 20
#define Ltrans_cind_cols 1
#define Ltrans_cind_len 20
extern int Ltrans_cind[20];

#define Ltrans_val_rows 20
#define Ltrans_val_cols 1
#define Ltrans_val_len 20
extern double Ltrans_val[20];

#define KKT_rows 58
#define KKT_cols 58
#define KKT_len 3364
extern double KKT[3364];

#define L_rind_rows 20
#define L_rind_cols 1
#define L_rind_len 20
extern int L_rind[20];

#define L_cind_rows 20
#define L_cind_cols 1
#define L_cind_len 20
extern int L_cind[20];

#define L_val_rows 20
#define L_val_cols 1
#define L_val_len 20
extern double L_val[20];
#ifdef lapack_linsolve 
extern __CLPK_integer ipiv[nn_lp];
#endif 
extern double *Lx_ss;
extern int *Li_ss;


// Functions
void custom_compute_parametric(REAL l[20], REAL f[34], REAL b[24], REAL par[4]);
void compute_parametric_pB(REAL y[24], REAL x[4]);
void custom_mult_Ltrans(REAL y[34], REAL x[20]);
/*
invert
*/
void custom_solve_kkt(REAL y[58], REAL x[58]);
void custom_compute_prefactor();
void custom_mult_L(REAL workDual[20], REAL x[34]);
void custom_prox(double y[nDual], double x[nDual]);


#endif
