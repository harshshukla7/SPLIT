

# ####################################################################################################################
# #################################################################################################################### 
#  PROCEDURES
# #################################################################################################################### 
# #################################################################################################################### 


# ############################# 
# procedure used to pass arguments to a tcl script (source: http://wiki.tcl.tk/10025)
proc src {file args} {
  set argv $::argv
  set argc $::argc
  set ::argv $args
  set ::argc [llength $args]
  set code [catch {uplevel [list source $file]} return]
  set ::argv $argv
  set ::argc $argc
  return -code $code $return
}


# ####################################################################################################################
# #################################################################################################################### 
#  BUILD
# #################################################################################################################### 
# #################################################################################################################### 

# Project name
set project_name "split_project"
# ############################# 
# #############################   
# Load configuration parameters


#load configuration parameters
set  file_name ""
append file_name ".metadata/" $project_name "_configuration_parameters.dat"
set fp [open $file_name r]
set file_data [read $fp]
close $fp
set data [split $file_data "\n"]

set num_input_vectors [lindex $data 3]
set num_output_vectors [lindex $data [expr ($num_input_vectors * 5) + 4 + 1]]
set fclk [lindex $data [expr ($num_input_vectors * 5) + ($num_output_vectors * 5) + 5 + 2]]
set FPGA_name [lindex $data [expr ($num_input_vectors * 5) + ($num_output_vectors * 5) + 5 + 4]]

# ############################# 
# ############################# 
# Run Vivado HLS

# Create a new project named "project_name"
cd ip_design/build/prj
open_project -reset $project_name
set_top foo

#added by Bulat
#Copy project settings files from src if they exist
if { [file exists ../../src/.cproject] } {
	file copy -force ../../src/.cproject $project_name
}

if { [file exists ../../src/.project] } {
	file copy -force ../../src/.project $project_name
}

if { [file exists ../../src/vivado_hls.app] } {
	file copy -force ../../src/vivado_hls.app $project_name
}
#end added by Bulat


# Add here below other files made by the user:
set filename [format "../../src/foo_data.h"] 
add_files $filename
set filename [format "../../src/foo_user.cpp"] 
add_files $filename
set filename [format "../../src/foo.cpp"] 
add_files $filename

#added by Bulat
# add the files with pattern *user*.cpp to the project automatically
set pattern "" 
append pattern ../../src/*user*.cpp
set file_list [glob $pattern]
foreach file $file_list {
  set filename [format $file] 
  add_files $filename
}
# end added by Bulat

# compute circuit clock period in ns
set time [ expr 1000/$fclk]

# Configure the design
open_solution -reset "solution1"
set FPGA_name_full ""
append FPGA_name_full "{" $FPGA_name "}"
set_part $FPGA_name_full
create_clock -period $time -name default
# Configure implementation directives to build an optimized FPGA circuit
set directives_destination_name ""
append directives_destination_name "../../src/" $project_name "_directives.tcl"
source $directives_destination_name

# Run design implementation
csynth_design
export_design -format ip_catalog -description "Template IP generated by Andrea Suardi a.suardi@imperial.ac.uk" -vendor "icl.ac.uk" -library "hls" -version "1.0"


# close Vivado HLS project
close_solution
close_project

cd ..
cd ..
cd ..

exit
